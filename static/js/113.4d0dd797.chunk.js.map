{"version":3,"file":"static/js/113.4d0dd797.chunk.js","mappings":"sSAQaA,EAAe,WAAO,IAAD,IACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAGA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOK,EAAP,KAAeC,EAAf,KA8BA,IA5BAC,EAAAA,EAAAA,YAAU,WACJF,GAGJC,EAAUR,EACX,GAAE,CAACO,EAAQP,KAKZS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEjBC,EAAK,mCAAG,8GAEaC,EAAAA,EAAAA,IAAgBf,EAASY,GAFtC,cAEJI,EAFI,OAGVR,EAAgBQ,GAHN,mDAMVV,EAAS,EAAD,IANE,yDAAH,qDAUX,OADAQ,IACO,WACLF,EAAWK,OACZ,CACF,GAAE,CAACjB,IAEAK,EACF,OAAO,SAAC,IAAD,CAAUA,MAAOA,IAG1B,GAAKE,EAAL,CAGA,IAAQW,EACNX,EADMW,YAAaC,EACnBZ,EADmBY,eAAgBC,EACnCb,EADmCa,aAAcC,EACjDd,EADiDc,SAAUC,EAC3Df,EAD2De,OAG7D,OACE,+BACE,UAAC,IAAD,CAAKC,GAAG,OAAR,WAEE,UAAC,KAAD,CAAUC,GAAE,oBAAEf,EAAOgB,aAAT,aAAE,EAAcC,YAAhB,QAAwB,IAApC,WACE,SAAC,MAAD,IADF,cAIA,UAAC,IAAD,CAAKC,QAAQ,OAAOC,GAAI,GAAIC,aAAa,SAASC,GAAI,GAAtD,WACE,SAAC,KAAD,CACEC,IAAG,0CAAqCb,GACxCc,IAAKb,KAEP,UAAC,IAAD,CAAKQ,QAAQ,OAAOM,QAAS,GAAIC,cAAc,SAA/C,WACE,wBAAKf,KACL,wCAAgBgB,KAAKC,MAAqB,GAAfhB,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,0BAAcA,EAAd,MAASD,EADC,aAMlB,UAAC,IAAD,CACEX,QAAQ,OACRM,QAAS,GACTC,cAAc,SACdN,GAAI,GACJE,GAAI,GACJD,aAAa,SANf,WAQE,oDACA,SAAC,KAAD,CAASL,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEF,SAAC,KAAD,QA1CL,CA8CF,C","sources":["components/Pages/MovieDetails.jsx"],"sourcesContent":["import { Box } from 'components/Box';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'components/API/Api';\nimport { useState, useEffect } from 'react';\nimport { NotFound } from './NotFound';\nimport { BackLink, DopLink, Poster } from 'components/Movies/Movies.styled';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [error, setError] = useState(null);\n\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  // варіант 1\n  const [goBack, setGoBack] = useState(null);\n\n  useEffect(() => {\n    if (goBack) {\n      return;\n    }\n    setGoBack(location);\n  }, [goBack, location]);\n\n  //варіант 2\n  //const goBack = useRef(location)\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetch = async () => {\n      try {\n        const response = await getMovieDetails(movieId, controller);\n        setMovieDetails(response);\n        return;\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetch();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (error) {\n    return <NotFound error={error} />;\n  }\n\n  if (!movieDetails) {\n    return;\n  }\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      <Box as=\"main\">\n        {/* <BackLink to={location.state?.from ?? '/'}> */}\n        <BackLink to={goBack.state?.from ?? '/'}>\n          <BsArrowLeft />\n          go back\n        </BackLink>\n        <Box display=\"flex\" mb={24} borderBottom=\"normal\" pb={10}>\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={original_title}\n          />\n          <Box display=\"flex\" gridGap={10} flexDirection=\"column\">\n            <h1>{original_title}</h1>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>genres</h2>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name} </li>\n              ))}\n            </ul>\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          gridGap={10}\n          flexDirection=\"column\"\n          mb={10}\n          pb={10}\n          borderBottom=\"normal\"\n        >\n          <h2>Additional information</h2>\n          <DopLink to=\"cast\">cast</DopLink>\n          <DopLink to=\"reviews\">reviews</DopLink>\n        </Box>\n        <Outlet />\n      </Box>\n    </>\n  );\n};\n"],"names":["MovieDetails","movieId","useParams","location","useLocation","useState","error","setError","movieDetails","setMovieDetails","goBack","setGoBack","useEffect","controller","AbortController","fetch","getMovieDetails","response","abort","poster_path","original_title","vote_average","overview","genres","as","to","state","from","display","mb","borderBottom","pb","src","alt","gridGap","flexDirection","Math","round","map","id","name"],"sourceRoot":""}